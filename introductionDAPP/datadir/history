eth.accounts
eth.getBalance(eth.accounts(1))
eth.getBalance(eth.accounts[1])
quit
quit()
var counterCode = "0x660ca54d39ac1da7fbec30100af9a2844c935bfa"
counterCode
eth.accounts(accounts[0], "abc123")
eth.accounts(eth.accounts[0], "abc123")
eth.sendTransaction(
{
from: eth.accounts[0],
data: "0x" + counterCode,
gas: 1000000
},
function(err, tx) {
console.log(err, tx);
}
);
clear
ls
eth.accounts
eth.getBalance("0x660ca54d39ac1da7fbec30100af9a2844c935bfa")
miner.start(1)
miner.stop()
eth.blockNumber
eth.getBalance(eth.accounts[0])
web3.fromWei(eth.getBalance(eth.accounts[0], "ether"))
web3.fromWei(eth.getBalance(eth.accounts[0]), "ether");
eth.getBalance(eth.accounts[0])
eth.getAccounts
eth.getAccounts()
eth.accounts
eth.sendTransaction({
  from: eth.accounts[0],
  to: eth.accounts[1],
  value: web3.toWei(3, "ether")
});
eth.getTransaction("0x5cf5d6bb0d4f88b62db707b3ef720acd24f72eb71ca51af93fbbae28b29829d8")
miner.start()
miner.stop()
eth.getTransaction("0x5cf5d6bb0d4f88b62db707b3ef720acd24f72eb71ca51af93fbbae28b29829d8")
eth.getBlock("0x036fbde05b64b4137e3921e3b8e970759bf555c6c437a2056098196b0bb7819e")
var counterCode = "6060604052341561000f57600080fd5b600160008190555060c9806100256000396000f3006060604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680636d4ce63c14604e578063d09de08a146074575b600080fd5b3415605857600080fd5b605e6086565b6040518082815260200191505060405180910390f35b3415607e57600080fd5b6084608f565b005b60008054905090565b6001600054016000819055505600a165627a7a72305820b90fa5c9285c65bc511a1e615c73b88688f980ed8ff7c261626091ddf58aa18c0029"
counterCode
eth.sendTransaction(
    {
        from: eth.accounts[0],
        data: "0x" + counterCode,
        gas: 1000000
    },
    function(err, tx) {
        console.log(err, tx);
    }
);
var contractAddr = "0xfa0E7b2e9E698baB6A069b21F0a9E8336fDBc073"
eth.getCode(contractAddr)
txpool.status
miner.start(1)
miner.stop()
eth.getCode(contractAddr)
const abi = JSON.parse("[{"constant":true,"inputs":[],"name":"get","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"increment","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]");
var abi = JSON.parse("[{"constant":true,"inputs":[],"name":"get","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"increment","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]");
abi
var abi = JSON.parse("[{"constant":true,"inputs":[],"name":"get","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"increment","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]");
var abi1 = JSON.parse("[{"constant":true,"inputs":[],"name":"get","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"increment","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]");
clear
clear()
var abi2 = JSON.parse('[{"constant":true,"inputs":[],"name":"get","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"increment","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]');
abi2
var Counter = eth.contract(abi2)
var counter = COunter.at(contractAddr)
var counter = Counter.at(contractAddr)
counter
counter.get()
counter.increment()
counter.increment.sendTransaction({ from : eth.accounts[0] });
counter.get()
miner.start()
miner.stop()
counter.get()
abi2
quit()
quit
miner.start()
miner.stop()
tx
txpool
miner.start()
miner.stop()